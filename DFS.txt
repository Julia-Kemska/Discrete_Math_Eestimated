#include <vector>
#include <stdio.h>
#include <queue>
#include <iostream>
using namespace std;

const int n = 9;
const int m = 9;

int iArr[n][m] = {0,1,0,0,0,0,0,1,1,
                 1,0,1,0,0,0,1,1,0,
                 0,1,0,1,0,0,1,0,0,
                 0,0,1,0,1,0,1,0,0,
                 0,0,0,1,0,1,1,0,0,
                 0,0,0,0,1,0,1,1,0,
                 0,1,1,1,1,1,0,1,0,
                 1,1,0,0,0,1,1,0,0,
                 1,0,0,0,0,0,0,0,0 };

bool used[n];

int j = 0;
int r = 0;
int i = 0;
int k = 0;

void dfs(int t) {

	used[t] = true;

	int p;

	for (i = k; i < n; i++)
	{
		j = r;
		if ((iArr[i][j] != 0) && (!used[i]))
		{
			used[i] = true;
			p = i;

			cout << i << " ";

			for (j = 0; j < m; j++)
			{
				i == p;
				if (iArr[i][j] != 0)
				{
					r = j;

					for (k = 0; k < n; k++)
					{
						j == r;

						if ((iArr[k][j] != 0) && (!used[k]))
						{
							dfs(i);
						}
					}
				}
			}
		}
	}
}


int main()
{

	for (int i = 0; i < n; i++)
	{
		used[i] = false;
		for (int j = 0; j < m; j++)
			cout << " " << iArr[i][j];
		cout << endl;
	}


	int from;
	cout << "From >> ";
	cin >> from;

	cout << "Order: " << endl;

	dfs(from);

	cout << endl;

	return 0;}
